services:
  nginx:
    image: nginx:1.27.4-alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=api.rikko.space
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - nginx-network

  database:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=auth
      - POSTGRES_PASSWORD=postgres
    volumes:
      - store_database_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - database_network
    
  keygen:
    build: ./keygen
    container_name: keygen_c
    volumes:
      - secrets:/secrets
    restart: no

  server:
    build: ./Server
    container_name: auth_server_c
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - secrets:/app/secrets
    depends_on:
      - database
      - keygen
    restart: unless-stopped
    networks:
      - nginx-network
      - database_network

  webapp:
    build:
      context: ./website
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    networks:
      - nginx-network
#    volumes:
##      - .:/app
##      - /app/node_modules

volumes:
  store_database_data:
  secrets:
    
networks:
  nginx-network:
    driver: bridge
  database_network:
    driver: bridge


